# ================================
# 潜空间 (Latent Space) - Nginx生产配置
# 优化的反向代理和静态文件服务配置
# ================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# 事件处理优化
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ================================
    # 基础配置
    # ================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # ================================
    # 性能优化
    # ================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    client_max_body_size 50m;
    
    # 缓冲区大小优化
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # ================================
    # Gzip压缩
    # ================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # ================================
    # 安全头配置
    # ================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header X-Download-Options "noopen" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # ================================
    # 上游服务器定义
    # ================================
    upstream app_backend {
        server app:5001;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # ================================
    # 速率限制
    # ================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # ================================
    # 主服务器配置
    # ================================
    server {
        listen 80;
        listen [::]:80;
        server_name yourdomain.com app.yourdomain.com;
        
        # 重定向到HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name yourdomain.com app.yourdomain.com;

        # ================================
        # SSL配置
        # ================================
        ssl_certificate /etc/ssl/certs/latent-space.crt;
        ssl_certificate_key /etc/ssl/private/latent-space.key;
        
        # SSL优化
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        
        # 现代SSL配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        # ================================
        # 静态文件服务
        # ================================
        location / {
            root /var/www/html;
            try_files $uri $uri/ /index.html;
            
            # 缓存策略
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
            }
            
            # HTML文件不缓存
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }

        # ================================
        # API代理
        # ================================
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 错误处理
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }

        # 认证API特殊限制
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ================================
        # WebSocket代理
        # ================================
        location /ws {
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket特定设置
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 5s;
        }

        # ================================
        # 健康检查
        # ================================
        location /health {
            access_log off;
            proxy_pass http://app_backend/health;
            proxy_set_header Host $host;
        }

        # ================================
        # 监控接口（限制访问）
        # ================================
        location /metrics {
            allow 172.20.0.0/16;  # Docker网络
            allow 127.0.0.1;      # 本地
            deny all;
            
            proxy_pass http://app_backend/metrics;
            proxy_set_header Host $host;
        }

        # ================================
        # 错误页面
        # ================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/html;
            internal;
        }
        
        location = /50x.html {
            root /var/www/html;
            internal;
        }

        # ================================
        # 安全配置
        # ================================
        # 隐藏Nginx版本
        server_tokens off;
        
        # 禁止访问隐藏文件
        location ~ /\. {
            deny all;
        }
        
        # 禁止访问备份文件
        location ~ ~$ {
            deny all;
        }
        
        # 限制请求方法
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|PATCH|OPTIONS)$ ) {
            return 405;
        }
    }

    # ================================
    # 包含其他配置文件
    # ================================
    include /etc/nginx/conf.d/*.conf;
}